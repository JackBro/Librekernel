#! /bin/bash

export iface=eth0
parms=`echo "$1" | tr -d '$,(,),{,},\`,|,/,<,>,%,#,@,!'`
export MODULE=`basename $(pwd)`

function clrVars()
{
	rm main.parm 2> /dev/null
}

function setArgs()
{
	conntype=`echo "$1" | awk -F ';' '{print $1}'`
	ipaddr=`echo "$1" | awk -F ';' '{print $2}'`
	netmask=`echo "$1" | awk -F ';' '{print $3}'`
	gw=`echo "$1" | awk -F ';' '{print $4}'`
	dns1=`echo "$1" | awk -F ';' '{print $5}'`
	dns2=`echo "$1" | awk -F ';' '{print $6}'`

	mkdir -p /tmp/"${MODULE}"
	echo "vconntype=$conntype" > /tmp/"${MODULE}"/main.arg
	echo "vipaddr=$ipaddr" >> /tmp/"${MODULE}"/main.arg
	echo "vnetmask=$netmask" >> /tmp/"${MODULE}"/main.arg
	echo "vgw=$gw" >> /tmp/"${MODULE}"/main.arg
	echo "vdns1=$dns1" >> /tmp/"${MODULE}"/main.arg
	echo "vdns2=$dns2" >> /tmp/"${MODULE}"/main.arg
	if [[ "$conntype" == "dhcp" ]]
	then
		echo "dhcpon=checked" >> /tmp/"${MODULE}"/main.arg
		echo "staticon=" >> /tmp/"${MODULE}"/main.arg
	else
		echo "dhcpon=" >> /tmp/"${MODULE}"/main.arg
		echo "staticon=checked" >> /tmp/"${MODULE}"/main.arg
	fi

	chown -Rf www-data:www-data /tmp/"${MODULE}"/
}

conntype=`echo "${parms}" | grep -Eo "conntype=[[:alpha:]]*" | cut -d '=' -f2`
[[ "$conntype" == "" ]] && conntype="dhcp"
if [[ "$conntype" == "static" ]]
then
	ipaddr=`echo "${parms}" | grep -Eo "ipaddr=([0-9]|[1-9][0-9]|1([0-9][0-9])|2([0-4][0-9]|5[0-5]))\.([0-9]|[1-9][0-9]|1([0-9][0-9])|2([0-4][0-9]|5[0-5]))\.([0-9]|[1-9][0-9]|1([0-9][0-9])|2([0-4][0-9]|5[0-5]))\.([0-9]|[1-9][0-9]|1([0-9][0-9])|2([0-4][0-9]|5[0-5]))" | cut -d '=' -f2`
	netmask=`echo "${parms}" | grep -Eo "netmask=([0-9]|[1-9][0-9]|1([0-9][0-9])|2([0-4][0-9]|5[0-5]))\.([0-9]|[1-9][0-9]|1([0-9][0-9])|2([0-4][0-9]|5[0-5]))\.([0-9]|[1-9][0-9]|1([0-9][0-9])|2([0-4][0-9]|5[0-5]))\.([0-9]|[1-9][0-9]|1([0-9][0-9])|2([0-4][0-9]|5[0-5]))" | cut -d '=' -f2`
	gw=`echo "${parms}" | grep -Eo "gw=([0-9]|[1-9][0-9]|1([0-9][0-9])|2([0-4][0-9]|5[0-5]))\.([0-9]|[1-9][0-9]|1([0-9][0-9])|2([0-4][0-9]|5[0-5]))\.([0-9]|[1-9][0-9]|1([0-9][0-9])|2([0-4][0-9]|5[0-5]))\.([0-9]|[1-9][0-9]|1([0-9][0-9])|2([0-4][0-9]|5[0-5]))" | cut -d '=' -f2`
	dns1=`echo "${parms}" | grep -Eo "dns1=([0-9]|[1-9][0-9]|1([0-9][0-9])|2([0-4][0-9]|5[0-5]))\.([0-9]|[1-9][0-9]|1([0-9][0-9])|2([0-4][0-9]|5[0-5]))\.([0-9]|[1-9][0-9]|1([0-9][0-9])|2([0-4][0-9]|5[0-5]))\.([0-9]|[1-9][0-9]|1([0-9][0-9])|2([0-4][0-9]|5[0-5]))" | cut -d '=' -f2`
	dns2=`echo "${parms}" | grep -Eo "dns2=([0-9]|[1-9][0-9]|1([0-9][0-9])|2([0-4][0-9]|5[0-5]))\.([0-9]|[1-9][0-9]|1([0-9][0-9])|2([0-4][0-9]|5[0-5]))\.([0-9]|[1-9][0-9]|1([0-9][0-9])|2([0-4][0-9]|5[0-5]))\.([0-9]|[1-9][0-9]|1([0-9][0-9])|2([0-4][0-9]|5[0-5]))" | cut -d '=' -f2`

	if [[ -z "$ipaddr" ]]
	then
		setArgs "$conntype;$ipaddr;$netmask;$gw;$dns1;$dns2"
		clrVars
		echo "1::Error: Missing or malformed parameter (IP Address)."
		exit
	fi
	if [[ -z "$netmask" ]]
	then
		setArgs "$conntype;$ipaddr;$netmask;$gw;$dns1;$dns2"
		clrVars
		echo "2::Error: Missing or malformed parameter (Netmask)."
		exit
	fi
	if [[ -z "$gw" ]]
	then
		setArgs "$conntype;$ipaddr;$netmask;$gw;$dns1;$dns2"
		clrVars
		echo "3::Error: Missing or malformed parameter (Gateway)."
		exit
	fi
	if [[ -z "$dns1" ]]
	then
		setArgs "$conntype;$ipaddr;$netmask;$gw;$dns1;$dns2"
		clrVars
		echo "4::Error: Missing or malformed parameter (DNS Server 1)."
		exit
	fi
	if [[ -z "$dns2" ]]
	then
		setArgs "$conntype;$ipaddr;$netmask;$gw;$dns1;$dns2"
		clrVars
		echo "5::Error: Missing or malformed parameter (DNS Server 2)."
		exit
	fi

	grep -q 'source /etc/network/interfaces.d/\*.cfg' /etc/network/interfaces || echo 'source /etc/network/interfaces.d/*.cfg' >> /etc/network/interfaces

	echo "auto $iface" > /etc/network/interfaces.d/"$iface".cfg
	echo "allow-hotplug $iface" >> /etc/network/interfaces.d/"$iface".cfg
	echo "iface $iface inet static" >> /etc/network/interfaces.d/"$iface".cfg
	echo -e "\taddress $ipaddr" >> /etc/network/interfaces.d/"$iface".cfg
	echo -e "\tgateway $gw" >> /etc/network/interfaces.d/"$iface".cfg
	echo -e "\tnetmask $netmask" >> /etc/network/interfaces.d/"$iface".cfg
	echo "nameserver $dns1" > /etc/resolv.conf
	echo "nameserver $dns2" >> /etc/resolv.conf
	ifdown "$iface" > /dev/null 2>&1
	ifup "$iface" > /dev/null 2>&1
	sip=`ifconfig "$iface" | grep -Eo "inet addr:([0-9]{0,3}.){4}" | cut -d : -f2 | tr -d ' '`
	snmask=`ifconfig "$iface" | grep -Eo "Mask:([0-9]{0,3}.){4}" | cut -d : -f2 | tr -d ' '`
	sgw=`route -n | grep "$iface" | awk '{print $2}' | head -n1 | tr -d ' '`
	if [[ "$sip" != "$ipaddr" ]] || [[ "$snmask" != "$netmask" ]] || [[ "$sgw" != "$gw" ]]
	then
		setArgs "$conntype;$ipaddr;$netmask;$gw;$dns1;$dns2"
		clrVars
		echo "7::Error: Unable to set network parameters, check the information you entered and try again."
		exit
	fi

	ping -w 1000 -c 4 8.8.8.8 > /dev/null 2>&1; retval="$?"
	if [[ "$retval" != "0" ]]
	then
		setArgs "$conntype;$ipaddr;$netmask;$gw;$dns1;$dns2"
		clrVars
		echo "8::Error: Network parameters set correctly but unable establish remote connection, check that the network is connected and try again."
		exit
	fi

	echo "vconntype=static" > main.parm
	echo "vipaddr=$ipaddr" >> main.parm
	echo "vnetmask=$netmask" >> main.parm
	echo "vgw=$gw" >> main.parm
	echo "vdns1=$dns1" >> main.parm
	echo "vdns2=$dns2" >> main.parm
	echo "dhcpon=" >> main.parm
	echo "staticon=checked" >> main.parm
	echo "0::Success: Link established successfully."

elif [[ "$conntype" == "dhcp" ]]
then
	grep -q 'source /etc/network/interfaces.d/\*.cfg' /etc/network/interfaces || echo 'source /etc/network/interfaces.d/*.cfg' >> /etc/network/interfaces

	echo "auto $iface" > /etc/network/interfaces.d/"$iface".cfg
	echo "allow-hotplug $iface" >> /etc/network/interfaces.d/"$iface".cfg
	echo "iface $iface inet dhcp" >> /etc/network/interfaces.d/"$iface".cfg

	ifdown "$iface" > /dev/null 2>&1
	ifup "$iface" > /dev/null 2>&1
	dhclient "$iface" > /dev/null 2>&1
	ping -w 1000 -c 4 8.8.8.8 > /dev/null 2>&1; retval="$?"
	if [[ "$retval" != "0" ]]
	then
		setArgs "$conntype;$ipaddr;$netmask;$gw;$dns1;$dns2"
		clrVars
		echo "8::Error: Unable to establish remote connection, check that the network is connected and try again."
		exit
	fi

	sip=`ifconfig "$iface" | grep -Eo "inet addr:([0-9]{0,3}.){4}" | cut -d : -f2 | tr -d ' '`
	snmask=`ifconfig "$iface" | grep -Eo "Mask:([0-9]{0,3}.){4}" | cut -d : -f2 | tr -d ' '`
	sgw=`route -n | grep "$iface" | awk '{print $2}' | head -n1 | tr -d ' '`
	dnss=`cat /etc/resolv.conf  | grep -Eo "nameserver ([0-9]{0,3}.){4}" | cut -d ' ' -f2 | tr -d ' ' | tr '\n' ' '`
	dns1=`echo "$dnss" | cut -d ' ' -f1`
	dns2=`echo "$dnss" | cut -d ' ' -f2`
	echo "vconntype=dhcp" > main.parm
	echo "vipaddr=$sip" >> main.parm
	echo "vnetmask=$snmask" >> main.parm
	echo "vgw=$sgw" >> main.parm
	echo "vdns1=$dns1" >> main.parm
	echo "vdns2=$dns2" >> main.parm
	echo "dhcpon=checked" >> main.parm
	echo "staticon=" >> main.parm
	echo "0::Success: Link established successfully."
else
	echo "6::Error (INTERNAL): Unable to determine connection type ($conntype)."
	clrVars
	exit
fi

